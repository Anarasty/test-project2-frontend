@import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed&display=swap');

body {
    background-image: url("bg1.jpg");
    background-repeat: no-repeat;
    /* background-position: center; */
    background-attachment: fixed;
    background-size: cover;
}
h1 {
    text-align: center;
    color: rgb(0, 0, 0);
}

.firstH {
    background-color: rosybrown;
    /* height: 100px;
    width: 600px; */
    min-width: 100px;
    max-width: 500px;
    margin: auto;
    border-style: solid;
    border-width: 1px;

    outline-style: dotted;
    outline-color: saddlebrown;
    outline-width: medium;
    outline-offset: 5px;
    
}

#firstP {
    color: rgb(255, 255, 255);
    font-size: 25px;
    text-shadow: 3px -3px 2px rgb(156, 156, 156);
    /* text-shadow: 0px 0px 3px blue; neon glow */
}

.second {
    background-color: rgba(255, 251, 0, 0.37);
    color: brown;
    font-variant: small-caps;
}

p.second {
    color: cadetblue;
    font-size: 20px;
    opacity: 0.3;
}

* {
    font-family: 'Roboto Condensed', sans-serif;
    font-style: normal;
    font-weight: bold;
    /* font-size: 100px; */
}

h2, h3 {
    text-align: center;
}

h2 {
    margin-top: 10px;
    margin-bottom: 20px;
    margin-right: 40px;
    margin-left: 50px;

    border-style: solid;
    border-width: 5px 10px;
    border-color: blue blue yellow yellow;
    border-radius: 10px;
}

h3 {
    background-color: rgba(255, 230, 0, 0.336);
    border-width: 5px;
    border-color: rgb(255, 238, 0);

    border-top-style: hidden;
    border-right-style: hidden;
    border-bottom-style: hidden;
    border-left-style: solid;

    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 0px;
    padding-right: 290px;
    /* width: 150px; */
}

p.pTest1 {
    text-align-last: justify;
    text-indent: 30px;
    line-height: 1.5;
    word-spacing: -5px;
    /* white-space: nowrap; */
}

p.pTest2 {
    direction: rtl;
    unicode-bidi: bidi-override;
    text-decoration: line-through;
    text-transform: capitalize;
    letter-spacing: 9px;
}

.linkOne {
    text-decoration: none;
    background-color: rgb(255, 255, 255);
    color: black;
    border-style: solid;
    border-width: thin;
    padding: 3px;
    border-radius: 8px;
    /* position: fixed; */
    /* display: inline-block; */
}

.linkOne:hover {
    background-color: rgb(255, 0, 0);
    color: rgb(255, 255, 255);
    font-size: 120%;
}

#iconYoutube {
    color: red;
    font-size: 18px;
}

.firstList {
    list-style-type: square;
    list-style-image: url('css.ico');
    list-style-position: inside;
    background-color: tomato;
    padding: 10px;
}

.firstList li {
    background-color: thistle;
}
.table1 th, td{
    border-style: solid;
    border-width: thin;
    border-color: tomato;
    border-collapse: collapse;
    width: 500px;
    height: 50px;
    background-color: wheat;
    vertical-align: bottom;
    /* text-align: center; */
    
}

.table1 {
    background-color: turquoise;
    overflow-x: auto;  /* TO MAKE THE TABLE RESPONSIVE */
}

.table1 td {
    background-color: white;
}

.table1 th, td {
    padding: 10px;
}

.table1 th:hover, td:hover {
    background-color: yellow;
}

.div1 {
    background-color: wheat;
    width: 200px;
    height: 60px;
    overflow: auto;
}

.orange {
    float: right;
    width: 100px;
    height: 100px;
}

/* descendant selector */
.combinator p{
    background-color: aqua;
}

/* child selector */
.combinator > p {
    color: brown;
}

/* adjacent sibling selector */
.combinator + p {
    background-color: brown;
}

/* general sibling selector */
.combinator ~ p {
    font-style: italic;
}

.pseudoP::first-line {
    color: brown;
}

.pseudoP::first-letter {
    font-size: 40px;
}

.pseudoBefore::before {
    content: url(css.ico);
}

.pseudoAfter::after {
    content: url(css.ico);
}
::marker {
    color: azure;
    font-size: 30px;
}

::selection {
    background-color: cornsilk;
}

.borderTest1 {
    background-color: rgb(255, 255, 255);
    border: 1px solid black;
    border-radius: 15px 50px 30px 5px;
}

.borderTest2 {
    background-color: rgb(255, 255, 255);
    border: 1px solid black;
    border-radius: 15px 50px 30px;
}

.borderTest3 {
    border-radius: 15px / 50px;
    background-color: rgb(255, 255, 255);
    border: 1px solid black;
}

.borderTest4 {
    border: 10px solid black;
    border-image: url(text-image.jpg) 50 round;
}

.bgTest1 {
    color: azure;
    width: 150px;
    height: 500px;
    border: none;
    background-image: url(text-image.jpg), url(bg-test.jpeg);
    background-position: right bottom, left top;
    background-repeat: no-repeat, no-repeat;
}
/* <a href="https://www.vecteezy.com/free-vector/black">Black Vectors by Vecteezy</a> */
.bgTest2 {
    color: azure;
    width: 150px;
    height: 200px;
    border: none;
    background-image: url(bg-test.jpeg);
    background-size: 200px 200px;
    background-repeat: no-repeat;
}

.gradientTest1 {
    color: white;
    width: 200px;
    height: 50px;
    background-image: linear-gradient(rgba(255,0,0,0), rgba(255,0,0,1)), url(bg-test.jpeg);
}

.gradientTest2 {
    color: white;
    width: 200px;
    height: 100px;
    background-image: repeating-radial-gradient( red 10%,blue 30%);
}

.gradientTest3 {
    color: white;
    width: 200px;
    height: 100px;
    background-image: conic-gradient(red 0deg, red 90deg, yellow 90deg, yellow 180deg, green 180deg, green 270deg, blue 270deg);
    /* background-image: repeating-conic-gradient(red 0deg 10deg, yellow 10deg 20deg, blue 20deg 30deg); */
    border-radius: 10%;
}

p.shadow{
    color: white;
    text-shadow:  red 4px 4px 5px;
}

a.shadow{
    color: red;
    width: 300px;
    height: 80px;
    padding: 15px;
    background-color: yellow;
    box-shadow: 10px 10px;
}

#shadowA {
    width: 300px;
    height: 80px;
    padding: 10px;
    background-color: aqua;
    box-shadow: rgb(0, 0, 0) 0px 4px 8px 0px;
}

.textEffect {
    width: 100px;
    height: 100px;
    border: 1px solid black;

    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.textEffect2 {
    width: 100px;
    height: 100px;
    border: 1px solid black;

    white-space: normal;
    overflow: hidden;
    word-wrap: break-word;
    word-break: break-all;
    text-align: justify;
    /* text-justify: inter-word; */
}

.textEffect span{
    writing-mode: vertical-lr;
}

.translate {
    width: 100px;
    height: 50px;
    border: 1px solid black;
    transform: translate(10px, 20px);
}

.rotate1 {
    margin-top: 50px;
    width: 100px;
    height: 50px;
    border: 1px solid black;
    transform: rotate(-60deg);
}

.scale {
    margin-top: 50px;
    width: 100px;
    height: 50px;
    border: 1px solid black;
    transform: scale(0.5, 0.5);
}

.skew {
    margin-top: 50px;
    width: 100px;
    height: 50px;
    border: 1px solid black;
    transform: skew(10deg, 10deg);
}

.rotate2 {
    margin-top: 50px;
    width: 100px;
    height: 50px;
    border: 1px solid black;
    transform: rotateX(70deg);
    /* transform: rotateY(70deg); */
    /* transform-style: preserve-3d;
    perspective: 100px; */
}

.transition {
    width: 100px;
    height: 50px;
    border: 1px solid black;
    transition-duration: 1s;
    transition-property: all;
    transition-timing-function: ease;
    transition-delay: 1s;
}

.transition:hover{
    transform: rotate(360deg);
}

/* ANIMATION TEST */

.animation1 {
    border: 1px solid red;
    width: 100px;
    background-color: aqua;
    animation-name: animationFirst;
    font-size: 20px;
    margin-bottom: 20px;
    animation-duration: 5s; /*defines how long an animation should take to complete*/
    animation-delay: 1s; /*specifies a delay for the start of an animation */
    animation-iteration-count: infinite; /*specifies the number of times an animation should run*/
    animation-direction: alternate; /*specifies whether an animation should be played forwards, backwards or in alternate cycles */
    animation-timing-function: ease; /*specifies the speed curve of the animation */
    /* animation-play-state: paused; */
    /* SHORTHAND PROPERTY */
    /* animation: animationFirst 5s ease 1s infinite alternate; */
}

@keyframes animationFirst {
    /* from {background-color: aqua;}
    to {background-color: azure;} */
    0%   {background-color: red;}
    25%  {background-color: yellow; font-size: 25px;}
    50%  {background-color: blue; font-size: 30px;}
    100% {background-color: green; font-size: 35px;}
}

.tooltip {
    text-align: center;
    width: 50px;
    border: 1px solid black;
    position: relative;
}

.thisTooltip {
    background-color: burlywood;
    visibility: hidden;
    position: absolute;
    margin-left: 10px;
    border: 1px solid black;
    border-radius: 5px;
    padding: 0px 5px;
    z-index: 1;
    width: 90px;
    top: -25px;
    left: -15px;
}

.tooltip:hover .thisTooltip{
    visibility: visible;
}

.mandarine {
    width: 100px;
    height: 100px;
    border-radius: 10px;
    display: block;
    margin-left: auto;
    margin-right: auto;
    opacity: 0.8;
    /* RESPONSIVE */
    /* max-width: 100%;
    height: auto; */
}
.mandarine:hover{
    box-shadow: 0px 0px 10px 5px;
    opacity: 1;
    transform: scale(1.2, 1.2);
    -webkit-box-reflect: left 30px linear-gradient(rgba(0,0,0,0.0), rgba(0,0,0,0.4));
}

.mandarine2 {
    width: 100px;
    height: 200px;
    object-fit: cover;
    object-position: 10% 20%;
}

.mandarine3 {
    width: 100px;
    height: 200px;
    object-fit: contain;
}

.mandarine4 {
    width: 100px;
    height: 200px;
    object-fit: none;
}

.mandarine5 {
    width: 100px;
    height: 200px;
    object-fit: scale-down;
}

.mask1 {
    -webkit-mask-image: url(mask-image.png);
    mask-image: url(mask-image.png);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
}

.mask2 {
    -webkit-mask-image: linear-gradient(rgba(255, 255, 255, 0), rgb(0, 0, 0));
    mask-image: linear-gradient(rgba(255, 255, 255, 0), rgb(0, 0, 0));
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
}

.mask3 {
    -webkit-mask-image: radial-gradient(circle, black 50%, rgba(0, 0, 0, 0.5) 50%);
    mask-image: radial-gradient(circle, black 50%, rgba(0, 0, 0, 0.5) 50%);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
}

/* NEED TO TEST SVG MASKS */

.button1{
    text-align: center;
    border: none;
    background-color: blanchedalmond;
    padding: 10px;
    cursor: pointer;
    font-size: 15px;
    transition-duration: 0.5s;
    transition-timing-function: ease;
}

.button1:hover {
    background-color: burlywood;
    transform: translate(0px, -10px);
    /* padding: 15px; */
    border-radius: 10px;
    box-shadow: 0px 5px 10px 0px;
    width: 20%;
}

.pagination {
    display: block;
}

.pagination a{
    text-decoration: none;
    color: red;
    border: 2px solid black;
    padding: 5px 10px;
    transition: 0.3s;
    margin: 0px 5px;
}

.pagination a:hover {
 background-color: rgb(156, 156, 156);
 border-color: rgb(255, 255, 255);
 border-radius: 10px;
}
.columnTest {
    column-count: 2;
    column-gap: 160px;
    column-rule-style: double;
    column-rule-width: 10px;
    column-rule-color: rgba(255, 251, 0, 0.37);
    /* column-width: 10px; */
}

.interface {
    border: 1px solid black;
    width: 200px;
    height: auto;
    resize: horizontal;
    overflow: auto;
    outline: 1px solid red;
    outline-offset: 5px;
}

/* Testing variables */
:root {
    --red: rgb(255, 0, 0);
}

.variables p {
    color: var(--red);
}

.variables h4 {
    --white: rgb(255, 255, 255);
    color: var(--white);
}

.boxSizing {
    width: 200px;
    height: 50px;
    border: 1px solid black;
}

.boxSizing2 {
    width: 200px;
    height: 50px;
    border: 1px solid black;
    padding: 50px;
    box-sizing: border-box;
}

@media screen and (min-width: 1050px) {
    .mediaQ {
        color: blue;
    }
}

.flexContainer {
    height: 400px;
    background-color: aqua;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    /* flex-flow: row wrap; SHORTHAND PROPERTY */
    justify-content: space-around;
    align-items: center;
    align-content: center;

    /* PERFECT CENTERING */
    /* justify-content: center;
    align-items: center; */
}

.flexContainer > div {
    background-color: azure;
    border: 1px solid black;
    font-size: 30px;
    padding: 10px 20px;
    margin: 10px 20px;
    width: 80px;
}

.flexContainerSecond {
    height: 400px;
    background-color: rgb(30, 255, 0);
    display: flex;
    flex-wrap: wrap;
}

.flexContainerSecond > div {
    height: 50px;
    border: 1px solid black;
    margin: 10px 20px;
    width: 200px;
    font-size: 20px;
}

.flexItem1 {
    /* order: 2; */
    flex-grow: 1;
    flex-basis: 100px;
    align-self: flex-start;
}

.flexItem2 {
    /* order: 3; */
    flex-grow: 5;
    flex-shrink: 0;
    align-self: flex-end;
}

.flexItem3 {
    /* order: 1; */
    flex-grow: 1;
    align-self: center;
}


/* TESTING GRID */
.grid-container {
    display: grid;
    background: yellow;
    grid-template-columns: auto auto auto;
    padding: 20px;
    grid-row-gap: 10px;
    grid-column-gap: 20px;
}

.grid-container .grid-item {
    background-color: aqua;
    border: 1px solid black;
    padding: 20px;
}

.grid-container .grid-item1 {
    grid-column-start: 1;
    grid-column-end: 1;
    grid-row-start: 1;
    grid-row-end: 4;
}

.grid-container2 {
    display: grid;
    background-color: antiquewhite;
    grid-template-columns: auto auto auto auto;
    grid-template-rows: 60px 100px;
    padding: 10px;
}

.grid-container2 div {
    background-color: aqua;
    border: 1px solid black;
    padding: 20px;
}