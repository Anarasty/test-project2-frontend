SELECTORS
# - for id
. - for class
element.class - for special class for the "element"
* - for all elements
element - for all "element" elements
element, element - for grouping

ATTRIBUTE SELECTORS
[attribute] - used to select elements with a specified attribute
[attribute="value"] - is used to select elements with a specified attribute and value
[attribute~="value"] - used to select elements with an attribute value containing a specified word
[attribute|="value"] - used to select elements with the specified attribute starting with the specified value
[attribute^="value"] - used to select elements whose attribute value begins with a specified value
[attribute$="value"] - used to select elements whose attribute value ends with a specified value
[attribute*="value"] - used to select elements whose attribute value contains a specified value


COMBINATORS
descendant selector (space) - matches all elements that are descendants of a specified element
child selector (>) - selects all elements that are the children of a specified element
adjacent sibling selector (+) - used to select an element that is directly after another specific element
general sibling selector (~) - selects all elements that are next siblings of a specified element

PSEUDO-CLASSES
:active	(a:active) - selects the active link
:checked (input:checked) - selects every checked <input> element
:disabled (input:disabled) - selects every disabled <input> element
:empty (p:empty) - selects every <p> element that has no children
:enabled (input:enabled) - selects every enabled <input> element
:first-child (p:first-child) - selects every <p> elements that is the first child of its parent
:first-of-type (p:first-of-type) - selects every <p> element that is the first <p> element of its parent
:focus (input:focus) - selects the <input> element that has focus
:hover (a:hover) - selects links on mouse over
:in-range (input:in-range) - selects <input> elements with a value within a specified range
:invalid (input:invalid) - selects all <input> elements with an invalid value
:lang(language) (p:lang(it)) - selects every <p> element with a lang attribute value starting with "it"
:last-child	(p:last-child) - selects every <p> elements that is the last child of its parent
:last-of-type (p:last-of-type) - selects every <p> element that is the last <p> element of its parent
:link (a:link) - selects all unvisited links
:not(selector) (:not(p)) - selects every element that is not a <p> element
:nth-child(n) (p:nth-child(2)) - selects every <p> element that is the second child of its parent
:nth-last-child(n) (p:nth-last-child(2)) - selects every <p> element that is the second child of its parent, counting from the last child
:nth-last-of-type(n) (p:nth-last-of-type(2)) - Selects every <p> element that is the second <p> element of its parent, counting from the last child
:nth-of-type(n)	(p:nth-of-type(2)) - selects every <p> element that is the second <p> element of its parent
:only-of-type (p:only-of-type) - selects every <p> element that is the only <p> element of its parent
:only-child	(p:only-child) - selects every <p> element that is the only child of its parent
:optional (input:optional) - selects <input> elements with no "required" attribute
:out-of-range (input:out-of-range) - selects <input> elements with a value outside a specified range
:read-only (input:read-only) - selects <input> elements with a "readonly" attribute specified
:read-write (input:read-write) - selects <input> elements with no "readonly" attribute
:required (input:required) - selects <input> elements with a "required" attribute specified
:root (root) - Selects the document's root element
:target	(#news:target) - selects the current active #news element (clicked on a URL containing that anchor name)
:valid (input:valid) - selects all <input> elements with a valid value
:visited (a:visited) - selects all visited links

PSEUDO-ELEMENT
::first-line - used to add a special style to the first line of a text
::first-letter - used to add a special style to the first letter of a text
::before - used to insert some content before the content of an element
::after - used to insert some content after the content of an element
::marker - selects the markers of list items
::selection - matches the portion of an element that is selected by a user

background-image:url() - add an image to your background
background-repeat - to let background repeat it self or not
background-size - set size of the background (cover - to cover entire element)
background-attachment - to make sure the background always covers the entire element (fixed)
background-color – colors the background of the element
background-position - used to specify the position of the background image
background-clip - defines how the background color or background image will be displayed below the box borders
background-origin - sets the area of the background 

border - adds borders to table
border-collapse - can make borders collapse into single border
border-radius - makes corners of the border rounded
border-style - set style of the border (dotted, dashed, solid, double, groove, ridge, inset, outset)
border-color - set the color of a border
border-spacing - specifies the distance between the borders of adjacent cells
border-width - sets the width of the four borders
border-image - shorthand property for setting all the border-image-* properties
border-image-source - specifies the path to the image to be used as a border
border-image-slice - specifies how to slice the border image
border-image-width - specifies the widths of the border image
border-image-outset - specifies the amount by which the border image area extends beyond the border box
border-image-repeat - specifies whether the border image should be repeated, rounded or stretched

box-sizing - defines how the width and height of an element are calculated: should they include padding and borders, or not

content - used with the ::before and ::after pseudo-elements, to insert generated content
counter() - returns the current value of the named counter
counter-increment - increments one or more counter values
counter-reset - creates or resets one or more counters

display -  sets whether an element is treated as a block or inline element

outline-style - specifies the style of the outline (dotted, dashed, solid, double, groove, ridge, inset, outset, none, hidden)
outline-color - sets the color of an outline
outline-offset - specifies the space between an outline and the edge or border of an element
outline-width - sets the width of an outline
overflow - specifies whether to clip the content or to add scrollbars when the content of an element is too big to fit in the specified area
overflow-wrap - specifies whether or not the browser can break lines with long words, if they overflow its container
overflow-x - specifies what to do with the left/right edges of the content if it overflows the element's content area
overflow-y - specifies what to do with the top/bottom edges of the content if it overflows the element's content area
opacity - specifies the opacity/transparency of an element

empty-cells - sets whether or not to display borders on empty cells in a table

clear - sets whether an element must be moved below (cleared) floating elements that precede it
color – colors the text
caption-side - specifies the placement of a table caption(top, bottom)

float - determines on which side the element will be aligned(left,right,none)

font-family – selects the font type
font-size – defines the font’s size
font-style - specifies the font style for text
font-weight - pecifies the weight of a font
font-variant - specifies whether or not a text should be displayed in a small-caps font

text-align – used to align text
text-align-last - specifies how to align the last line of a text
text-decoration - adds text decoration above the text(line,tyle,color)
text-transform - used to specify uppercase and lowercase letters in text
text-indent- used to specify the indentation of the first line of text
text-justify - determines what type of alignment should be applied to the text when text-align: justify; applies to the element
text-overflow - specifies how overflowed content that is not displayed should be signaled to the user
text-shadow - specifies the shadow effect added to text

table-layout - sets the algorithm used to lay out <table> cells, rows, and columns

letter-spacing - 3px
line-height - used to specify the space between lines

list-style-type - specifies the type of list item marker(circle, square, upper-romen, lower-alpha)
list-style-image - specifies an image as the list item marker(needs url)
list-style-position - specifies the position of the list-item markers(outside, inside)

position - specifies the type of positioning method used for an element (static, relative, fixed, absolute or sticky)
padding – defines space between text and border (left, right, top, bottom)(can't be negative)
margin – defines space outside the border (left, right, top, bottom)(can be negative)

white-space - specifies how white-space inside an element is handled
word-spacing - used to specify the space between the words in text
width - sets the width of an element

height - sets the height of an element

max-width -sets the maximum width of an element
min-width - sets the minimum width of an element
max-height - sets the maximum height of an element
min-height - sets the minimum height of an element

direction - used to change the text direction of an element
unicode-bidi - determines how bidirectional text in a document is handled

vertical-align - sets the vertical alignment of an element
visibility - specifies whether or not an element should be visible

z-index - specifies the stack order of an element (which element should be placed in front of, or behind, the others)
